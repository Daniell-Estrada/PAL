plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.4.2"
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'mysql:mysql-connector-java:8.0.33'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.itextpdf:itext7-core:7.2.5'
	implementation 'com.itextpdf:kernel:7.2.5'
	implementation 'com.itextpdf:layout:7.2.5'
	implementation 'com.itextpdf:io:7.2.5'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}


configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.springframework' && details.requested.name.startsWith('spring-')) {
            details.useVersion '6.2.2'
            details.because 'All spring libs must use consistent version'
        }
    }
}
